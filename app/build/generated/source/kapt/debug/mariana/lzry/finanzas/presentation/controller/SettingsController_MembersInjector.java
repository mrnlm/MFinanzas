// Generated by Dagger (https://dagger.dev).
package mariana.lzry.finanzas.presentation.controller;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import mariana.lzry.finanzas.domain.usecases.GetCategoriesUseCase;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsController_MembersInjector implements MembersInjector<SettingsController> {
  private final Provider<GetCategoriesUseCase> getCategoriesUseCaseProvider;

  public SettingsController_MembersInjector(
      Provider<GetCategoriesUseCase> getCategoriesUseCaseProvider) {
    this.getCategoriesUseCaseProvider = getCategoriesUseCaseProvider;
  }

  public static MembersInjector<SettingsController> create(
      Provider<GetCategoriesUseCase> getCategoriesUseCaseProvider) {
    return new SettingsController_MembersInjector(getCategoriesUseCaseProvider);
  }

  @Override
  public void injectMembers(SettingsController instance) {
    injectGetCategoriesUseCase(instance, getCategoriesUseCaseProvider.get());
  }

  @InjectedFieldSignature("mariana.lzry.finanzas.presentation.controller.SettingsController.getCategoriesUseCase")
  public static void injectGetCategoriesUseCase(SettingsController instance,
      GetCategoriesUseCase getCategoriesUseCase) {
    instance.getCategoriesUseCase = getCategoriesUseCase;
  }
}
